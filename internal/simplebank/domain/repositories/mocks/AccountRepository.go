// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/nohponex/clean-architecture/internal/simplebank/domain/model"
	mock "github.com/stretchr/testify/mock"
)

// AccountRepository is an autogenerated mock type for the AccountRepository type
type AccountRepository struct {
	mock.Mock
}

// Get provides a mock function with given fields: ctx, id
func (_m *AccountRepository) Get(ctx context.Context, id model.AccountID) (model.Account, bool, error) {
	ret := _m.Called(ctx, id)

	var r0 model.Account
	if rf, ok := ret.Get(0).(func(context.Context, model.AccountID) model.Account); ok {
		r0 = rf(ctx, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(model.Account)
		}
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(context.Context, model.AccountID) bool); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Get(1).(bool)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, model.AccountID) error); ok {
		r2 = rf(ctx, id)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// Save provides a mock function with given fields: ctx, account
func (_m *AccountRepository) Save(ctx context.Context, account model.Account) error {
	ret := _m.Called(ctx, account)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, model.Account) error); ok {
		r0 = rf(ctx, account)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
